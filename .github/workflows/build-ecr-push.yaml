name: build ecr and deploy

on:
 
  push:
    branches: [ 'main' ]

env:
  ECR_REPOSITORY: prod/app
  EKS_CLUSTER_NAME: testlab-cluster 
  AWS_REGION: us-east-2

jobs:
  
  create-envfile:
 
    runs-on: ubuntu-latest
 
    steps:
    - name: Make envfile
      uses: SpicyPizza/create-envfile@v2.0
      with:
        envkey_DEBUG: false
        envkey_MONGO_URI: ${{ secrets.MONGO_URI }}
        envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}

  build:
    
    name: Deployment
    runs-on: ubuntu-latest

    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: 'true'

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{env.ECR_REPOSITORY}}        
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        docker build -t prod/app .
        docker tag prod/app:latest 748033149816.dkr.ecr.us-east-2.amazonaws.com/prod/app:latest
        docker push 748033149816.dkr.ecr.us-east-2.amazonaws.com/prod/app:latest

    - name: Update kube config
      run: aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region $AWS_REGION

    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}        
        IMAGE_TAG: ${{ steps.commit.outputs.short }}
      run: |
        sed -i.bak "s|DOCKER_IMAGE|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" manifests/deployment.yaml && \
        kubectl apply -f manifests/deployment.yaml
        kubectl apply -f manifests/service.yaml